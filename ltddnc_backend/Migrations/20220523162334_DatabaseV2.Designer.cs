// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ltddnc_backend;

namespace ltddnc_backend.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20220523162334_DatabaseV2")]
    partial class DatabaseV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ltddnc_backend.Entity.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("IdRole");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@gmail.com",
                            IdRole = 1,
                            Password = "4bb0a94f21769c3b9d68cd8256a87104",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "Admin2@gmail.com",
                            IdRole = 1,
                            Password = "4bb0a94f21769c3b9d68cd8256a87104",
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "Cust@gmail.com",
                            IdRole = 1,
                            Password = "4bb0a94f21769c3b9d68cd8256a87104",
                            State = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "Cust2@gmail.com",
                            IdRole = 1,
                            Password = "4bb0a94f21769c3b9d68cd8256a87104",
                            State = 1
                        });
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Cart", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdUser", "IdProduct");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            IdUser = 3,
                            IdProduct = 1,
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Burger",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gà Rán",
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mì Ý",
                            State = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thức Uống",
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kem",
                            State = 0
                        });
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FeeDelivery")
                        .HasColumnType("float");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdAccount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserIdAccount");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ltddnc_backend.Entity.OrderDetail", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("IdOrder", "IdProduct");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Gà sốt với đậu",
                            IdCategory = 1,
                            Name = "Gà sốt đậu",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 38000.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Gà sốt H&S",
                            IdCategory = 1,
                            Name = "Gà sốt H&S",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 38000.0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Burger Mozzarella",
                            IdCategory = 2,
                            Name = "Burger Mozzarella",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 50000.0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Burger Double Double",
                            IdCategory = 2,
                            Name = "Burger Double Double",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 60000.0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Mì Ý",
                            IdCategory = 3,
                            Name = "Mì Ý",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 35000.0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Mì Ý Thịt Bò",
                            IdCategory = 3,
                            Name = "Mì Ý Thịt Bò",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 40000.0
                        },
                        new
                        {
                            Id = 7,
                            Description = "7Up Dưa Lưới Đào",
                            IdCategory = 4,
                            Name = "7Up Dưa Lưới Đào",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 15000.0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Nước Cam",
                            IdCategory = 4,
                            Name = "Nước Cam",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 18000.0
                        },
                        new
                        {
                            Id = 9,
                            Description = "Burger Bulgogi",
                            IdCategory = 2,
                            Name = "Burger Bulgogi",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 45000.0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Burger Gà Thượng Hạng",
                            IdCategory = 2,
                            Name = "Burger Gà Thượng Hạng",
                            State = 1,
                            Stock = 100,
                            UnitPrice = 60000.0
                        });
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Review", b =>
                {
                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdAccount")
                        .HasColumnType("int");

                    b.HasKey("IdProduct", "IdUser", "Date");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserIdAccount");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            IdProduct = 1,
                            IdUser = 3,
                            Date = new DateTime(2022, 5, 23, 23, 23, 33, 519, DateTimeKind.Local).AddTicks(1114),
                            Comment = "Good",
                            Name = "Bao",
                            Rating = 5
                        },
                        new
                        {
                            IdProduct = 1,
                            IdUser = 3,
                            Date = new DateTime(2022, 5, 23, 23, 23, 33, 520, DateTimeKind.Local).AddTicks(2309),
                            Comment = "Bad",
                            Name = "Bao",
                            Rating = 1
                        },
                        new
                        {
                            IdProduct = 1,
                            IdUser = 3,
                            Date = new DateTime(2022, 5, 23, 23, 23, 33, 520, DateTimeKind.Local).AddTicks(2379),
                            Comment = "Very Good",
                            Name = "Bao",
                            Rating = 5
                        });
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Staff",
                            State = 1
                        });
                });

            modelBuilder.Entity("ltddnc_backend.Entity.User", b =>
                {
                    b.Property<int>("IdAccount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAccount");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdAccount = 1,
                            Address = "282  Nguyễn Duy Trinh, phường Bình Trưng Tây, Quận 2, TP. HCM",
                            Name = "Giang",
                            Phone = "0328807778"
                        },
                        new
                        {
                            IdAccount = 2,
                            Address = "Số 1 Võ Văn Ngân, TP Thủ Đức, TP. HCM",
                            Name = "Thao",
                            Phone = "0328807778"
                        },
                        new
                        {
                            IdAccount = 3,
                            Address = "20 Đặng Văn Bi, phường Trường Thọ, TP Thủ Đức",
                            Name = "Bao",
                            Phone = "0328807778"
                        },
                        new
                        {
                            IdAccount = 4,
                            Address = "23/2 Đường số 8, TP Thủ Đức",
                            Name = "Yen",
                            Phone = "0328807778"
                        });
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Account", b =>
                {
                    b.HasOne("ltddnc_backend.Entity.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Cart", b =>
                {
                    b.HasOne("ltddnc_backend.Entity.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Order", b =>
                {
                    b.HasOne("ltddnc_backend.Entity.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserIdAccount");
                });

            modelBuilder.Entity("ltddnc_backend.Entity.OrderDetail", b =>
                {
                    b.HasOne("ltddnc_backend.Entity.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ltddnc_backend.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Product", b =>
                {
                    b.HasOne("ltddnc_backend.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ltddnc_backend.Entity.Review", b =>
                {
                    b.HasOne("ltddnc_backend.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ltddnc_backend.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserIdAccount");
                });

            modelBuilder.Entity("ltddnc_backend.Entity.User", b =>
                {
                    b.HasOne("ltddnc_backend.Entity.Account", "Account")
                        .WithOne("User")
                        .HasForeignKey("ltddnc_backend.Entity.User", "IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
